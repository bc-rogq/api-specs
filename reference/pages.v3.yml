openapi: 3.0.0
info:
  title: Pages V3
  version: '3.0'
  description: Manage content pages across multiple sites.
  termsOfService: 'http://www.bigcommerce.com/terms'
tags:
  - name: Pages
paths:
  /content/pages:
    get:
      operationId: content-pages-get
      tags:
        - Pages
      description: |-
        Returns a list of content pages.

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > This endpoint is in beta. Any comments on performance should be submitted via the **Docs Feedback** button on this page.

        </div>
        </div>
        </div>
      responses:
        '200':
          description: |
            An array of pages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesCollectionResponse'
              examples:
                example-1:
                  value:
                    data:
                      - id: 1
                        channel_id: 1
                        name: Content page
                        meta_title: Content page
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        description: null
                        type: page
                        meta_keywords: ''
                        meta_description: string
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: string
                        content_type: text/html
                        url: /my-content-page
                      - id: 2
                        channel_id: 1
                        name: Feed page
                        meta_title: string
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 3
                        description: null
                        feed: 'https://bigcommerce.com/feed/'
                        type: feed
                        meta_keywords: ''
                        meta_description: string
                        is_homepage: false
                        is_customers_only: true
                        search_keywords: string
                        content_type: text/html
                        url: /rss-feed-page
                      - id: 3
                        channel_id: 1
                        name: Link page
                        meta_title: ''
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        description: null
                        link: '1'
                        type: link
                        meta_keywords: ''
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                        content_type: text/html
                    meta:
                      pagination:
                        total: 3
                        count: 3
                        per_page: 50
                        current_page: 1
                        total_pages: 1
                        links:
                          current: '?page=1&limit=50'
      parameters:
        - schema:
            type: integer
          in: query
          name: channel_id
          description: Channel Id to return only pages for a given Channel.
        - schema:
            type: integer
          in: query
          name: id
          description: Id of the page.
        - schema:
            type: string
          in: query
          name: 'id:in'
          description: 'Explicitly fetch Pages by IDs, provided as CSV string.'
        - schema:
            type: string
          in: query
          name: name
          description: Name of the page.
        - schema:
            type: string
          in: query
          name: 'name:like'
          description: Partial name of the page.
        - schema:
            type: integer
          in: query
          name: limit
          description: Number of results to return per page.
        - schema:
            type: integer
          in: query
          name: page
          description: 'Which page number to return, based on the page size. Used to paginate large collections.'
        - schema:
            type: string
            example: body
            enum:
              - body
          in: query
          name: include
          description: Indicates whether to include page sub-resources.
      summary: Get Pages
    post:
      operationId: content-pages-post
      description: |-
        Creates a content page.

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > This endpoint is in beta. Any comments on performance should be submitted via the **Docs Feedback** button on this page.
        </div>
        </div>
        </div>
      tags:
        - Pages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
            examples:
              example-1:
                value:
                  channel_id: 1
                  name: Content Page
                  is_visible: false
                  parent_id: 0
                  sort_order: 0
                  type: page
                  body: <div>Hello World!</div>
                  is_homepage: false
                  meta_title: My Content page
                  meta_keywords: string
                  meta_description: string
                  search_keywords: string
                  url: /my-content-page
        description: ''
        required: true
      responses:
        '200':
          description: |+

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
              examples:
                example-1:
                  value:
                    data:
                      email: string
                      meta_title: string
                      body: <div>Hello World!</div>
                      meta_keywords: string
                      meta_description: string
                      search_keywords: page
                      url: /my-content-page
                      channel_id: 1
                      name: Content Page
                      is_visible: true
                      parent_id: 0
                      sort_order: 0
                      type: page
                      is_homepage: true
                      is_customers_only: true
                    id: 1
        '207':
          $ref: '#/components/responses/HTTP207Response'
        '422':
          description: |
            The `Page` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Create a Page
    put:
      operationId: content-pages-put
      description: |-
        Updates a content page.

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > This endpoint is in beta. Any comments on performance should be submitted via the **Docs Feedback** button on this page.

        </div>
        </div>
        </div>
      tags:
        - Pages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagePut'
            examples:
              example-1:
                value:
                  id: 9
                  channel_id: 1
                  name: Content Page
                  meta_title: Content Page
                  is_visible: false
                  parent_id: 0
                  sort_order: 0
                  type: page
                  meta_keywords: ''
                  meta_description: string
                  is_homepage: false
                  is_customers_only: false
                  search_keywords: 'content, api'
                  url: /my-content-page
        description: ''
        required: true
      responses:
        '200':
          description: |+

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
              examples:
                Response:
                  value:
                    data:
                      id: 9
                      channel_id: 1
                      name: Content Page
                      meta_title: Content Page
                      email: ''
                      is_visible: false
                      parent_id: 0
                      sort_order: 0
                      description: null
                      type: page
                      meta_keywords: ''
                      meta_description: string
                      is_homepage: false
                      is_customers_only: false
                      search_keywords: 'content, api'
                      content_type: text/html
                      url: /my-content-page
                    meta: {}
        '207':
          $ref: '#/components/responses/HTTP207Response'
        '422':
          description: |
            The `Page` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: Update a Page
    delete:
      operationId: content-pages-delete
      tags:
        - Pages
      description: |-
        Deletes a page from a store.

        <div class="HubBlock--callout">
        <div class="CalloutBlock--info">
        <div class="HubBlock-content">

        > ### Note
        > This endpoint is in beta. Any comments on performance should be submitted via the **Docs Feedback** button on this page.

        </div>
        </div>
        </div>
      responses:
        '204':
          description: |
            An empty response.
      parameters:
        - schema:
            type: integer
          in: query
          name: 'id:in'
          description: List of Redirect IDs to delete explicitly
        - schema:
            type: integer
          in: query
          name: channel_id
          description: Channel Id provided to delete all pages for a given Channel
      summary: Delete a Page
servers:
  - url: 'https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3'
    description: Pages API Gateway
    variables:
      store_hash:
        default: abc123
        description: Store hash used to identify the store.
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
components:
  schemas:
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
    CollectionMeta:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
    PagesCollectionResponse:
      description: |
        Response payload for the BigCommerce API.
      type: object
      title: ''
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PageFull'
        meta:
          $ref: '#/components/schemas/CollectionMeta'
    PageResponse:
      description: |
        Response payload for the BigCommerce API.
      x-examples: {}
      allOf:
        - properties:
            data:
              $ref: '#/components/schemas/PageFull'
        - properties:
            meta:
              type: object
      type: object
    ContactFields:
      allOf:
        - properties:
            fullname:
              type: string
              description: Full name of the customer submitting the form.
            phone:
              type: string
              description: 'Customer’s phone number, as submitted on the form.'
            companyname:
              type: string
              description: Customer’s submitted company name.
            orderno:
              type: string
              description: Customer’s submitted order number.
            rma:
              type: string
              description: Customer’s submitted RMA (Return Merchandise Authorization) number.
      type: object
    PagePut:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the page.
          required:
            - id
      x-examples: {}
    Page:
      allOf:
        - type: object
          properties:
            email:
              type: string
              description: 'Where the page’s type is a contact form: contact email address that receives messages sent via the form. Must be unique.'
              maxLength: 255
            meta_title:
              type: string
            body:
              type: string
              description: |
                HTML or variable that populates this page’s  element, in default/desktop view. Required in a `POST` request if the page type is `raw`.
              example: <div>Hello World!</div>
            feed:
              type: string
              description: |
                The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.
            link:
              type: string
              description: |
                Required in a `POST` request to create a link if the page type is `link`.
            contact_fields:
              type: string
              description: |
                Where the page’s type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:

                |Field|Description|
                |-|-|
                |`fullname`|Full name of the customer submitting the form|
                |`phone`|Customer’s phone number, as submitted on the form|
                |`companyname`|Customer’s submitted company name|
                |`orderno`|Customer’s submitted order number|
                |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|
              example: 'fullname,companyname,phone,orderno,rma'
            meta_keywords:
              type: string
              description: |
                Comma-separated list of SEO-relevant keywords to include in the page’s  element.
            meta_description:
              type: string
              description: |
                Description contained within this page’s  element.
            search_keywords:
              type: string
              description: |
                Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
              example: page
            url:
              type: string
              description: |
                Relative URL on the storefront for this page.
              example: /my-store-page
            channel_id:
              type: integer
              description: |
                The Id of the channel where this page should be shown.
              example: 1
        - $ref: '#/components/schemas/PageBase'
      title: ''
      description: ''
    PageBase:
      type: object
      description: Common Page properties.
      properties:
        name:
          type: string
          description: |
            The name of the page. Must be unique.
          minLength: 1
          maxLength: 100
          example: My Store Page
        is_visible:
          type: boolean
          description: |
            Determines the visibility of the page in the storefront’s navigation menu.
        parent_id:
          type: integer
          description: |
            ID of any parent Web page.
          example: 0
        sort_order:
          type: integer
          description: |
            Determines the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)
          example: 0
        type:
          type: string
          description: |-
            Determines the type of the page.

            |Value|Description|
            |-|-|
            |`contact_form`|when the store’s contact form is used|
            |`link`|link to another web address|
            |`page`|free-text page|
            |`raw`|raw page|
            |`rss_feed`|syndicated content from an RSS feed|
          example: page
        is_homepage:
          type: boolean
          description: |
            Determines whether this page is the storefront’s home page.
        is_customers_only:
          type: boolean
          description: |
            If `true`, this will be displayed as a home page.
      required:
        - name
        - type
    Pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
    PageFull:
      title: PageFull
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            id:
              type: integer
              description: ID of the page.
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      type: apiKey
      in: header
  responses:
    HTTP207Response:
      description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'
      content:
        application/json:
          schema: {}
security:
  - X-Auth-Token: []
